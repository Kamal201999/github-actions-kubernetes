name: CI/CD Pipeline

on:
  push:
    branches: [ "master" ] # Auo-Trigger on prod
  pull_request:
    branches: [ "master" ] 
  
jobs:     # Part 1
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
     matrix:
      node-version: [16.x, 18.x]   # Matrix Builds
    env:
     IMAGE_NAME: kamal201999/hello-kubernetes

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: SonarQube Cloud Scan
        uses: sonarsource/sonarqube-scan-action@v2
        with:
         ProjectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
         docker build -t $IMAGE_NAME:${{ github.sha }} .
         docker push $IMAGE_NAME:${{ github.sha }}
         
      - name: Pull and Deploy
        run: |
         docker pull $IMAGE_NAME:${{ github.sha }}
         echo  "Docker image ready for kubernetes deployment"

deploy:
 runs-on: ubuntu:latest
 needs: build-and-push
 steps:
  - name: Checkout Repo
    uses: actions/checkout@v3

  - name: setup Terraform
    uses: hashicorp/setup-terraform@v2

  - name: Terrafrom init
    run: terraform -chdir=terraform init

  - name: Terraform Apply
    run: terraform -chdir=terraform apply -auto-approve
    env:
     AWS_ACCESS_KEY_ID: ${{ secrest.AWS_ACCESS_KEY_ID }}
     AWS_secrest_ACCESS_KEY_ID: ${{ secrest. AWS_secrest_ACCESS_KEY_ID }}
     AWS_DEFAULT_REGION: us-east-1

  - name: install Kubectl
    run: |
     curl -LO "https://dl.k8s.io/release/$(curl -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
     chmod +x kubectl 
     sudo mv kubectl /usr/local/bin/

  - name: deploy to kubernetes
    run: |
         kubectl apply -f k8s/deployment.yaml
         kubectl apply -f k8s/service.yaml

  - name: Verify Pods
    run: kubectl get pods -o wide

  - name: Verify Service
    run: kubectl get svc -o wide  
         
